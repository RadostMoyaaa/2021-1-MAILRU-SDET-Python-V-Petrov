version: '2.1'

networks:
  docker_network:
    external:
      name: ${COMPOSE_NET}

services:
  mysql_container:  # DataBase
    networks:
      docker_network: null
    image: "percona:latest"
    environment:
      MYSQL_ROOT_PASSWORD: pass
    volumes:
      - ./services_configs/mysql_config/mysql-init.sql:/data/application/mysql-init.sql
    command: --init-file /data/application/mysql-init.sql
    healthcheck:
      test: [ 'CMD', 'mysqladmin', '-uroot', '-ppass', 'ping', '-h', '127.0.0.1' ]
      timeout: 1s
      retries: 3


  mock_container:  # Mock VK_API
    networks:
      docker_network: null
    image: "mock:latest"
    volumes:
      - ./vk_mock:/tmp/source_code
    entrypoint: /bin/bash /tmp/source_code/start_tests.sh

  app:  # Application
    networks:
      docker_network: null
    image: "myapp:latest"
    volumes:
      - ./services_configs/app/app_config:/tmp/app_config
    entrypoint: /app/myapp --config=/tmp/app_config
    depends_on:
      mysql_container:
        condition: service_healthy

  selenoid:
    networks:
      docker_network: null
    image: "aerokube/selenoid:latest"
    volumes:
      - ./services_configs/selenoid_config/:/etc/selenoid_config
      - /var/run/docker.sock:/var/run/docker.sock
    command: [ "-conf", "/etc/selenoid_config/browsers.json", "-container-network", "${COMPOSE_NET}" ]

  tests: # Tests
    networks:
      docker_network: null
    image: "fp_tests:latest"
    tty: true
    environment:
      - TYPE=${MARK}
      - N=${WORKERS}
    volumes:
      - ./source_code:/tmp/source_code
      - $WORKSPACE/allure-results:/tmp/allure
    entrypoint: /bin/bash /tmp/source_code/start_tests.sh
    depends_on:
      app:
        condition: service_started